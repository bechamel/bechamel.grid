// Mixins
//
@mixin container-gutter($padding: $container-padding) {
  padding-left: $padding;
  padding-right: $padding;
}

@mixin grid-gutter($gutter: $grid-gutter) {
  padding: $gutter/2;

  .container & {
    padding: 0;
    margin: -$gutter/2;
  }
}

// Offset calculation
@mixin offset-size($size) {
  margin-left: #{$size+"%"};
}

// Width calculation
@mixin column-size($size) {
  max-width: #{$size+'%'};
  flex-basis: #{$size+'%'};
}

// Create columns attributes modifiers
@mixin column($size, $size_name, $attribute: '-column', $screen_name: '') {
  &[data#{$attribute}#{$screen_name}='#{$size_name}'] {
    @if $attribute == '-column' {
      @include column-size($size);
    }
    @else if $attribute == '-offset' {
      @include offset-size($size);
    }
  }
}

@mixin columns($attribute: '-column', $screen_name: '') {
  @include column( (10), '10', $attribute, $screen_name);
  @include column( (20), '20', $attribute, $screen_name);
  @include column( (25), '25', $attribute, $screen_name);
  @include column( (100/3), '33', $attribute, $screen_name);
  @include column( (40), '40', $attribute, $screen_name);
  @include column( (50), '50', $attribute, $screen_name);
  @include column( (60), '60', $attribute, $screen_name);
  @include column( (2/3*100), '66', $attribute, $screen_name);
  @include column( (75), '75', $attribute, $screen_name);
  @include column( (80), '80', $attribute, $screen_name);
  @include column( (90), '90', $attribute, $screen_name);
  @include column( (100), '100', $attribute, $screen_name);
}


//  Generate phone columns
//
@mixin phone_columns () {

  // 1 column default on phone
  @include column-size(100);

  // Define columns
  @include columns;

  // Define order override classes.
  @for $i from 1 through $grid-max-columns {
    &[data-order='#{$i}'] {
      order: $i;
    }
  }

  // Define valid phone offsets.
  @include columns($attribute:'-offset');

  // Fixed cell sizes
  @for $i from 1 through 8 {
    .#{$grid-classname}[data-columns='#{$i}'] & {
      @include column-size(100 / $i);
    }
  }
}


//  Generate tablet columns
//
@mixin tablet_columns () {
  @media (min-width: $grid-tablet-breakpoint) {

    // 2 columns default on tablet
    @include column-size(100/2);

    // Define partial sizes for columnNumber < totalColumns.
    @include columns($screen_name:'-tablet');
    @include column($size: 100, $size_name: '100', $attribute: '-column', $screen_name:'-tablet');

    // Define order override classes.
    // @include columns('-order','-tablet');
    @for $i from 1 through $grid-max-columns {
      &[data-order-tablet='#{$i}'] {
        order: $i;
      }
    }

    // Define valid tablet offsets.
    @include columns($attribute:'-offset',$screen_name:'-tablet');

    // Fixed cell sizes for tablets
    @for $i from 1 through 8 {
      .#{$grid-classname}[data-columns-tablet='#{$i}'] & {
        @include column-size(100 / $i);
      }
    }

  }
}


// Generate desktop columns
//
@mixin desktop_columns () {
  @media (min-width: $grid-desktop-breakpoint) {

    // 4 columns default on desktop
    @include column-size(100/4);

    // Define partial sizes for all numbers of columns.
    @include columns($screen_name:'-desktop');

    // Define order override classes.
    @for $i from 1 through $grid-max-columns {
      &[data-order-desktop='#{$i}'] {
        order: $i;
      }
    }

    // Define valid desktop offsets.
    @include columns($attribute:'-offset',$screen_name:'-desktop');

    // Fixed cell sizes for desktop
    @for $i from 1 through 8 {
      .#{$grid-classname}[data-columns-desktop='#{$i}'] & {
        @include column-size(100 / $i);
      }
    }

  }
}


//  Generate large desktop columns
//
@mixin large_desktop_columns () {
  @media (min-width: $grid-large-desktop-breakpoint) {

    // 5 columns default on large desktop
    @include column-size(100/5);

    // Define partial sizes for all numbers of columns.
    @include columns($screen_name:'-large-desktop');

    // Define order override classes.
    @for $i from 1 through $grid-max-columns {
      &[data-order-large-desktop='#{$i}'] {
        order: $i;
      }
    }

    // Define valid large desktop offsets.
    @include columns($attribute:'-offset',$screen_name:'-large-desktop');

    // Fixed cell sizes for large desktop
    @for $i from 1 through 8 {
      .#{$grid-classname}[data-columns-large-desktop='#{$i}'] & {
        @include column-size(100 / $i);
      }
    }

  }
}